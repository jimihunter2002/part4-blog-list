{"version":3,"sources":["utilities/utility.js","components/Button.js","components/Blog.js","services/login.js","components/SubmitButton.js","components/LoginForm.js","components/SuccessNotification.js","components/ErrorNotification.js","components/BlogForm.js","components/Togglable.js","services/blogService.js","App.js","index.js"],"names":["blogCompare","a","b","likes","str","split","map","name","toUpperCase","concat","slice","join","arr","sort","Button","action","onClick","id","type","value","style","cursor","Blog","blog","user","onDeleteHandler","onUpdateLikes","useState","details","setDetails","bgCorlor","setBgColor","blogStyle","paddingTop","paddingLeft","border","borderWidth","marginBottom","paddingBottom","addLikes","blogToUpdate","showBlogDetails","className","title","utility","author","url","username","setTimeout","window","confirm","backgroundColor","login","credentials","axios","post","response","data","SubmitButton","actionHandler","LoginForm","password","handleLogin","usernameHandler","passwordHandler","onSubmit","onChange","SuccessNotification","message","ErrorNotification","BlogForm","handler","addBlog","titleHandler","authorHandler","urlHandler","createHandler","Togglable","React","forwardRef","props","ref","visible","setVisible","handleLoginCancel","handleBlogCancel","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","buttonLabel","children","data-testid","displayName","token","getAll","get","create","newBlog","config","headers","Authorization","setToken","newToken","update","put","deleteBlog","delete","require","baseUrl","process","BASE_URL","App","setUserName","setPassword","blogs","setBlogs","setUser","setTitle","setAuthor","setUrl","errorMessage","setErrorMessage","successMessage","setSuccessMessage","fetchBlogs","blogService","blogList","console","log","useEffect","loggedUserJSON","localStorage","getItem","JSON","parse","event","preventDefault","loginService","setItem","stringify","logoutHandle","removeItem","location","href","blogObject","returnedBlog","blogToupdate","cancelLoginHandler","cancelBlogHandler","target","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c68d72e.chunk.js","sourcesContent":["const capitalizeString = str => {\n  return str\n    .split(' ')\n    .map(name => (name = name[0].toUpperCase().concat(name.slice(1))))\n    .join(' ');\n};\n\nconst blogCompare = (a, b) => {\n  return b.likes - a.likes;\n};\n\nconst blogSort = arr => {\n  return arr.sort(blogCompare);\n};\nexport default { capitalizeString, blogSort };\n","import React from 'react';\n\nconst Button = ({ action, onClick, id }) => {\n  return (\n    <>\n      <input\n        id={id}\n        type='button'\n        value={action}\n        onClick={onClick}\n        style={{ cursor: 'pointer' }}\n      />\n    </>\n  );\n};\n\nexport default Button;\n","import React, { useState } from 'react';\nimport utility from '../utilities/utility';\nimport Button from './Button';\n\nconst Blog = ({ blog, user, onDeleteHandler, onUpdateLikes }) => {\n  const [details, setDetails] = useState(false);\n  const [bgCorlor, setBgColor] = useState('');\n\n  const blogStyle = {\n    paddingTop: 10,\n    paddingLeft: 2,\n    border: 'solid',\n    borderWidth: 1,\n    marginBottom: 5,\n    paddingBottom: 10,\n  };\n\n  const deleteHandler = () => {\n    setBgColor('#429bf5');\n    setTimeout(() => {\n      let result = window.confirm(\n        `Remove Blog You're NOT gonna need it! by ${blog.author}`,\n      );\n      result ? onDeleteHandler(blog) : setBgColor('');\n    }, 0);\n  };\n\n  const addLikes = async () => {\n    const blogToUpdate = { ...blog, likes: blog.likes + 1 };\n\n    onUpdateLikes(blog.id, blogToUpdate);\n  };\n\n  const showBlogDetails = () => {\n    setDetails(!details);\n  };\n  if (details === false) {\n    return (\n      <div style={blogStyle} className='blog-default'>\n        {blog.title} {utility.capitalizeString(blog.author)} &nbsp;\n        <Button id='view-btn' action='view' onClick={showBlogDetails} />\n      </div>\n    );\n  } else {\n    return (\n      <div style={blogStyle} className='blog-details'>\n        {blog.title} {utility.capitalizeString(blog.author)} &nbsp;\n        <Button action='hide' onClick={showBlogDetails} />\n        <br />\n        {blog.url}\n        <br />\n        <span>{blog.likes}</span>\n        <button\n          className='like'\n          type='button'\n          onClick={addLikes}\n          style={{ cursor: 'pointer' }}>\n          Like\n        </button>\n        <br />\n        {utility.capitalizeString(blog.author)}\n        <br />\n        {blog.user.username === user.username ? (\n          <button\n            className='remove-btn'\n            type='button'\n            onClick={deleteHandler}\n            style={{ cursor: 'pointer', backgroundColor: bgCorlor }}>\n            Remove\n          </button>\n        ) : null}\n      </div>\n    );\n  }\n};\n\nexport default Blog;\n","import axios from 'axios';\n\n// const baseUrl = 'http://localhost:3001/api/login';\nconst baseUrl = '/api/login';\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials);\n  return response.data;\n};\n\nexport default {\n  login,\n};\n","import React from 'react';\n\nconst SubmitButton = ({ action, actionHandler, id }) => {\n  return (\n    <div>\n      <button\n        id={id}\n        type='submit'\n        style={{ cursor: 'pointer' }}\n        onClick={actionHandler}>\n        {action}\n      </button>\n    </div>\n  );\n};\n\nexport default SubmitButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SubmitButton from './SubmitButton';\n\nconst LoginForm = ({\n  username,\n  password,\n  handleLogin,\n  usernameHandler,\n  passwordHandler,\n}) => {\n  return (\n    <div>\n      <h2>Login</h2>\n      <form onSubmit={handleLogin}>\n        <div>\n          username{' '}\n          <input id='username' value={username} onChange={usernameHandler} />\n        </div>\n        <div>\n          password{' '}\n          <input\n            id='password'\n            type='password'\n            value={password}\n            onChange={passwordHandler}\n          />\n        </div>\n        <SubmitButton id='login-button' action='login' />\n      </form>\n    </div>\n  );\n};\n\nLoginForm.propTypes = {\n  username: PropTypes.string.isRequired,\n  password: PropTypes.string.isRequired,\n  handleLogin: PropTypes.func.isRequired,\n  usernameHandler: PropTypes.func.isRequired,\n  passwordHandler: PropTypes.func.isRequired,\n};\n\nexport default LoginForm;\n","import React from 'react';\n\nconst SuccessNotification = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n  return <div className='success notification'>{message}</div>;\n};\n\nexport default SuccessNotification;\n","import React from 'react';\n\nconst ErrorNotification = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n  return <div className='error notification'>{message}</div>;\n};\n\nexport default ErrorNotification;\n","import React from 'react';\n//import SubmitButton from '../components/SubmitButton';\n\nconst BlogForm = ({ handler }) => {\n  const {\n    addBlog,\n    title,\n    titleHandler,\n    author,\n    authorHandler,\n    url,\n    urlHandler,\n    createHandler,\n  } = handler;\n  return (\n    <div className='formDiv'>\n      <form onSubmit={addBlog}>\n        <div>\n          title:{' '}\n          <input\n            id='title'\n            type='text'\n            name='title'\n            value={title}\n            onChange={titleHandler}\n          />\n        </div>\n        <div>\n          author:{' '}\n          <input\n            id='author'\n            type='text'\n            name='author'\n            value={author}\n            onChange={authorHandler}\n          />\n        </div>\n        <div>\n          url:{' '}\n          <input\n            type='text'\n            id='url'\n            name='url'\n            value={url}\n            onChange={urlHandler}\n          />\n        </div>\n        <button id='create-btn' type='submit' onClick={createHandler}>\n          create\n        </button>\n        {/* <SubmitButton\n          id='create-btn'\n          action='create'\n          actionHandler={createHandler}\n        /> */}\n      </form>\n    </div>\n  );\n};\n\nexport default BlogForm;\n","import React, { useState, useImperativeHandle } from 'react';\nimport PropTypes from 'prop-types';\nimport BlogForm from './BlogForm';\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false);\n  const handleLoginCancel = props.handleLoginCancel;\n  const handleBlogCancel = props.handleBlogCancel;\n\n  const hideWhenVisible = { display: visible ? 'none' : '' };\n  const showWhenVisible = { display: visible ? '' : 'none' };\n\n  const toggleVisibility = () => {\n    setVisible(!visible);\n  };\n\n  //for toggling\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility,\n    };\n  });\n\n  const createHandler = () => {\n    toggleVisibility();\n  };\n\n  const loginCancelHandle = () => {\n    toggleVisibility();\n    handleLoginCancel();\n  };\n\n  const blogCancelHandle = () => {\n    toggleVisibility();\n    handleBlogCancel();\n  };\n\n  const handler = {\n    ...props.handler,\n    createHandler,\n  };\n\n  if (props.buttonLabel === 'login') {\n    return (\n      <div>\n        <div style={hideWhenVisible}>\n          <button onClick={toggleVisibility} style={{ cursor: 'pointer' }}>\n            {props.buttonLabel}\n          </button>\n        </div>\n        <div style={showWhenVisible}>\n          {props.children}\n          <button id='cancel-login' onClick={loginCancelHandle}>\n            cancel\n          </button>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        <div style={showWhenVisible} className='hide-form'>\n          <BlogForm handler={handler} />\n          <button onClick={blogCancelHandle} data-testid='blog-cancel'>\n            cancel\n          </button>\n        </div>\n        <div style={hideWhenVisible} className='show-form'>\n          <button onClick={toggleVisibility} style={{ cursor: 'pointer' }}>\n            {props.buttonLabel}\n          </button>\n          {props.children}\n        </div>\n      </div>\n    );\n  }\n});\n\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired,\n};\n\nTogglable.displayName = 'Togglable';\nexport default Togglable;\n","import axios from 'axios';\nconst baseUrl = '/api/blogs';\n\nvar token = null;\nconst setToken = newToken => {\n  token = `bearer ${newToken}`;\n};\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl);\n  return response.data;\n};\n\nconst create = async newBlog => {\n  const config = {\n    headers: { Authorization: token },\n  };\n\n  const response = await axios.post(baseUrl, newBlog, config);\n  return response.data;\n};\n\nconst update = async (id, newBlog) => {\n  const config = {\n    headers: { Authorization: token },\n  };\n\n  const response = await axios.put(`${baseUrl}/${id}`, newBlog, config);\n  return response.data;\n};\n\nconst deleteBlog = async id => {\n  const config = {\n    headers: { Authorization: token },\n  };\n  const response = await axios.delete(`${baseUrl}/${id}`, config);\n  return response.data;\n};\n\nexport default {\n  getAll,\n  create,\n  setToken,\n  update,\n  deleteBlog,\n};\n\n// module.exports = {\n//   getAll,\n//   create,\n//   setToken,\n//   update,\n//   deleteBlog,\n// };\n","import React, { useState, useEffect } from 'react';\n//import blogService from '../src/services/blogService';\nimport Blog from './components/Blog';\nimport Button from './components/Button';\nimport loginService from '../src/services/login';\nimport LoginForm from './components/LoginForm';\nimport SuccessNotification from './components/SuccessNotification';\nimport ErrorNotification from './components/ErrorNotification';\nimport utility from './utilities/utility';\nimport Togglable from './components/Togglable';\n// const blogService = require('../src/services/blogService');\nimport blogService from '../src/services/blogService';\nrequire('dotenv').config();\n\nconst baseUrl = process.env.BASE_URL;\nconst App = () => {\n  const [username, setUserName] = useState('');\n  const [password, setPassword] = useState('');\n  const [blogs, setBlogs] = useState([]);\n  const [user, setUser] = useState(null);\n  const [title, setTitle] = useState('');\n  const [author, setAuthor] = useState('');\n  const [url, setUrl] = useState('');\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [successMessage, setSuccessMessage] = useState(null);\n\n  //for toggling\n  //const loginFormRef = React.createRef();\n\n  //props like button\n  async function fetchBlogs() {\n    try {\n      const blogList = await blogService.getAll();\n      setBlogs(blogList);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  useEffect(() => {\n    fetchBlogs();\n  }, []);\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogAppUser');\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      blogService.setToken(user.token);\n    }\n  }, []);\n\n  const handleLogin = async event => {\n    event.preventDefault();\n    try {\n      const user = await loginService.login({ username, password });\n      blogService.setToken(user.token);\n      window.localStorage.setItem('loggedBlogAppUser', JSON.stringify(user));\n      setUser(user);\n      setUserName('');\n      setPassword('');\n    } catch (error) {\n      setErrorMessage('wrong username or password');\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n    }\n  };\n\n  const logoutHandle = async () => {\n    window.localStorage.removeItem('loggedBlogAppUser');\n    window.location.href = baseUrl;\n  };\n\n  const titleHandler = event => setTitle(event.target.value);\n  const authorHandler = event => setAuthor(event.target.value);\n  const urlHandler = event => setUrl(event.target.value);\n\n  const usernameHandler = event => setUserName(event.target.value);\n  const passwordHandler = event => setPassword(event.target.value);\n\n  const addBlog = async event => {\n    event.preventDefault();\n    const blogObject = {\n      title,\n      author,\n      url,\n    };\n    try {\n      const returnedBlog = await blogService.create(blogObject);\n\n      setSuccessMessage(`${title}! by ${author} added`);\n      setTimeout(() => {\n        setSuccessMessage(null);\n      }, 5000);\n      setBlogs(blogs.concat(returnedBlog));\n      setTitle('');\n      setAuthor('');\n      setUrl('');\n    } catch (error) {\n      setErrorMessage(\n        'blog may already exist or blog creation failed service not available try again ...',\n      );\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n    }\n  };\n\n  const onDeleteHandler = async blog => {\n    try {\n      await blogService.deleteBlog(blog.id);\n      setSuccessMessage(`blog titled \"${blog.title}! by ${author} deleted`);\n      setTimeout(() => {\n        setSuccessMessage(null);\n      }, 5000);\n      fetchBlogs();\n    } catch (error) {\n      setErrorMessage(\n        'blog cannot be deleted service not available try again ...',\n      );\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n    }\n  };\n\n  const onUpdateLikes = async (id, blogToupdate) => {\n    try {\n      await blogService.update(id, blogToupdate);\n\n      fetchBlogs();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const cancelLoginHandler = () => {\n    setUserName('');\n    setPassword('');\n  };\n\n  const cancelBlogHandler = () => {\n    setTitle('');\n    setAuthor('');\n    setUrl('');\n  };\n\n  const handler = {\n    addBlog,\n    titleHandler,\n    authorHandler,\n    urlHandler,\n    title,\n    url,\n    author,\n    cancelLoginHandler,\n    cancelBlogHandler,\n  };\n\n  if (user === null) {\n    return (\n      <div>\n        <h2>blogs</h2>\n        <ErrorNotification message={errorMessage} />\n        <Togglable buttonLabel='login' handleLoginCancel={cancelLoginHandler}>\n          <LoginForm\n            username={username}\n            password={password}\n            usernameHandler={usernameHandler}\n            passwordHandler={passwordHandler}\n            handleLogin={handleLogin}\n          />\n        </Togglable>\n      </div>\n    );\n  } else {\n    return (\n      <>\n        <h2>blogs</h2>\n        <SuccessNotification message={successMessage} />\n        <ErrorNotification message={errorMessage} />\n        <p>\n          {utility.capitalizeString(user.name)} logged in{' '}\n          <Button id='logout-btn' action='logout' onClick={logoutHandle} />\n        </p>\n\n        <Togglable\n          buttonLabel='new note'\n          handler={handler}\n          handleBlogCancel={cancelBlogHandler}>\n          {utility.blogSort(blogs).map(blog => (\n            <Blog\n              key={blog.id}\n              blog={blog}\n              user={user}\n              onDeleteHandler={onDeleteHandler}\n              onUpdateLikes={onUpdateLikes}\n            />\n          ))}\n        </Togglable>\n      </>\n    );\n  }\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport './App.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}