{"version":3,"sources":["services/blogService.js","utilities/utility.js","components/Button.js","components/Blog.js","services/login.js","components/SubmitButton.js","components/LoginForm.js","components/SuccessNotification.js","components/ErrorNotification.js","components/BlogForm.js","components/Togglable.js","App.js","index.js"],"names":["axios","require","token","getAll","a","get","response","data","create","newBlog","config","headers","Authorization","post","update","id","put","deleteBlog","delete","module","exports","setToken","newToken","blogCompare","b","likes","str","split","map","name","toUpperCase","concat","slice","join","arr","sort","Button","action","onClick","type","value","style","cursor","Blog","blog","user","onDeleteHandler","onUpdateLikes","useState","details","setDetails","bgCorlor","setBgColor","blogStyle","paddingTop","paddingLeft","border","borderWidth","marginBottom","paddingBottom","addLikes","blogToUpdate","showBlogDetails","className","title","utility","author","url","username","setTimeout","window","confirm","backgroundColor","login","credentials","SubmitButton","actionHandler","LoginForm","password","handleLogin","usernameHandler","passwordHandler","onSubmit","onChange","SuccessNotification","message","ErrorNotification","BlogForm","handler","addBlog","titleHandler","authorHandler","urlHandler","createHandler","Togglable","React","forwardRef","props","ref","visible","setVisible","handleLoginCancel","handleBlogCancel","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","buttonLabel","children","data-testid","displayName","blogService","App","setUserName","setPassword","blogs","setBlogs","setUser","setTitle","setAuthor","setUrl","errorMessage","setErrorMessage","successMessage","setSuccessMessage","fetchBlogs","blogList","console","log","useEffect","loggedUserJSON","localStorage","getItem","JSON","parse","event","preventDefault","loginService","setItem","stringify","logoutHandle","removeItem","location","href","blogObject","returnedBlog","blogToupdate","cancelLoginHandler","cancelBlogHandler","target","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.69ad7209.chunk.js","sourcesContent":["'use strict';\nconst axios = require('axios');\n\n// const baseUrl = 'http://localhost:3001/api/blogs';\nconst baseUrl = '/api/blogs';\n\nvar token = null;\nconst setToken = newToken => {\n  token = `bearer ${newToken}`;\n};\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl);\n  return response.data;\n};\n\nconst create = async newBlog => {\n  const config = {\n    headers: { Authorization: token },\n  };\n\n  const response = await axios.post(baseUrl, newBlog, config);\n  return response.data;\n};\n\nconst update = async (id, newBlog) => {\n  const config = {\n    headers: { Authorization: token },\n  };\n\n  const response = await axios.put(`${baseUrl}/${id}`, newBlog, config);\n  return response.data;\n};\n\nconst deleteBlog = async id => {\n  const config = {\n    headers: { Authorization: token },\n  };\n  const response = await axios.delete(`${baseUrl}/${id}`, config);\n  return response.data;\n};\n\nmodule.exports = {\n  getAll,\n  create,\n  setToken,\n  update,\n  deleteBlog,\n};\n","const capitalizeString = str => {\n  return str\n    .split(' ')\n    .map(name => (name = name[0].toUpperCase().concat(name.slice(1))))\n    .join(' ');\n};\n\nconst blogCompare = (a, b) => {\n  return b.likes - a.likes;\n};\n\nconst blogSort = arr => {\n  return arr.sort(blogCompare);\n};\nexport default { capitalizeString, blogSort };\n","import React from 'react';\n\nconst Button = ({ action, onClick, id }) => {\n  return (\n    <>\n      <input\n        id={id}\n        type='button'\n        value={action}\n        onClick={onClick}\n        style={{ cursor: 'pointer' }}\n      />\n    </>\n  );\n};\n\nexport default Button;\n","import React, { useState } from 'react';\nimport utility from '../utilities/utility';\nimport Button from './Button';\n\nconst Blog = ({ blog, user, onDeleteHandler, onUpdateLikes }) => {\n  const [details, setDetails] = useState(false);\n  const [bgCorlor, setBgColor] = useState('');\n\n  const blogStyle = {\n    paddingTop: 10,\n    paddingLeft: 2,\n    border: 'solid',\n    borderWidth: 1,\n    marginBottom: 5,\n    paddingBottom: 10,\n  };\n\n  const deleteHandler = () => {\n    setBgColor('#429bf5');\n    setTimeout(() => {\n      let result = window.confirm(\n        `Remove Blog You're NOT gonna need it! by ${blog.author}`,\n      );\n      result ? onDeleteHandler(blog) : setBgColor('');\n    }, 0);\n  };\n\n  const addLikes = async () => {\n    const blogToUpdate = { ...blog, likes: blog.likes + 1 };\n\n    onUpdateLikes(blog.id, blogToUpdate);\n  };\n\n  const showBlogDetails = () => {\n    setDetails(!details);\n  };\n  if (details === false) {\n    return (\n      <div style={blogStyle} className='blog-default'>\n        {blog.title} {utility.capitalizeString(blog.author)} &nbsp;\n        <Button id='view-btn' action='view' onClick={showBlogDetails} />\n      </div>\n    );\n  } else {\n    return (\n      <div style={blogStyle} className='blog-details'>\n        {blog.title} {utility.capitalizeString(blog.author)} &nbsp;\n        <Button action='hide' onClick={showBlogDetails} />\n        <br />\n        {blog.url}\n        <br />\n        <span>{blog.likes}</span>\n        <button\n          className='like'\n          type='button'\n          onClick={addLikes}\n          style={{ cursor: 'pointer' }}>\n          Like\n        </button>\n        <br />\n        {utility.capitalizeString(blog.author)}\n        <br />\n        {blog.user.username === user.username ? (\n          <button\n            className='remove-btn'\n            type='button'\n            onClick={deleteHandler}\n            style={{ cursor: 'pointer', backgroundColor: bgCorlor }}>\n            Remove\n          </button>\n        ) : null}\n      </div>\n    );\n  }\n};\n\nexport default Blog;\n","import axios from 'axios';\n\n// const baseUrl = 'http://localhost:3001/api/login';\nconst baseUrl = '/api/persons';\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials);\n  return response.data;\n};\n\nexport default {\n  login,\n};\n","import React from 'react';\n\nconst SubmitButton = ({ action, actionHandler, id }) => {\n  return (\n    <div>\n      <button\n        id={id}\n        type='submit'\n        style={{ cursor: 'pointer' }}\n        onClick={actionHandler}>\n        {action}\n      </button>\n    </div>\n  );\n};\n\nexport default SubmitButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SubmitButton from './SubmitButton';\n\nconst LoginForm = ({\n  username,\n  password,\n  handleLogin,\n  usernameHandler,\n  passwordHandler,\n}) => {\n  return (\n    <div>\n      <h2>Login</h2>\n      <form onSubmit={handleLogin}>\n        <div>\n          username{' '}\n          <input id='username' value={username} onChange={usernameHandler} />\n        </div>\n        <div>\n          password{' '}\n          <input\n            id='password'\n            type='password'\n            value={password}\n            onChange={passwordHandler}\n          />\n        </div>\n        <SubmitButton id='login-button' action='login' />\n      </form>\n    </div>\n  );\n};\n\nLoginForm.propTypes = {\n  username: PropTypes.string.isRequired,\n  password: PropTypes.string.isRequired,\n  handleLogin: PropTypes.func.isRequired,\n  usernameHandler: PropTypes.func.isRequired,\n  passwordHandler: PropTypes.func.isRequired,\n};\n\nexport default LoginForm;\n","import React from 'react';\n\nconst SuccessNotification = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n  return <div className='success notification'>{message}</div>;\n};\n\nexport default SuccessNotification;\n","import React from 'react';\n\nconst ErrorNotification = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n  return <div className='error notification'>{message}</div>;\n};\n\nexport default ErrorNotification;\n","import React from 'react';\nimport SubmitButton from '../components/SubmitButton';\n\nconst BlogForm = ({ handler }) => {\n  const {\n    addBlog,\n    title,\n    titleHandler,\n    author,\n    authorHandler,\n    url,\n    urlHandler,\n    createHandler,\n  } = handler;\n  return (\n    <div className='formDiv'>\n      <form onSubmit={addBlog}>\n        <div>\n          title:{' '}\n          <input\n            id='title'\n            type='text'\n            name='title'\n            value={title}\n            onChange={titleHandler}\n          />\n        </div>\n        <div>\n          author:{' '}\n          <input\n            id='author'\n            type='text'\n            name='author'\n            value={author}\n            onChange={authorHandler}\n          />\n        </div>\n        <div>\n          url:{' '}\n          <input\n            type='text'\n            id='url'\n            name='url'\n            value={url}\n            onChange={urlHandler}\n          />\n        </div>\n        <button id='create-btn' type='submit' onClick={createHandler}>\n          create\n        </button>\n        {/* <SubmitButton\n          id='create-btn'\n          action='create'\n          actionHandler={createHandler}\n        /> */}\n      </form>\n    </div>\n  );\n};\n\nexport default BlogForm;\n","import React, { useState, useImperativeHandle } from 'react';\nimport PropTypes from 'prop-types';\nimport BlogForm from './BlogForm';\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false);\n  const handleLoginCancel = props.handleLoginCancel;\n  const handleBlogCancel = props.handleBlogCancel;\n\n  const hideWhenVisible = { display: visible ? 'none' : '' };\n  const showWhenVisible = { display: visible ? '' : 'none' };\n\n  const toggleVisibility = () => {\n    setVisible(!visible);\n  };\n\n  //for toggling\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility,\n    };\n  });\n\n  const createHandler = () => {\n    toggleVisibility();\n  };\n\n  const loginCancelHandle = () => {\n    toggleVisibility();\n    handleLoginCancel();\n  };\n\n  const blogCancelHandle = () => {\n    toggleVisibility();\n    handleBlogCancel();\n  };\n\n  const handler = {\n    ...props.handler,\n    createHandler,\n  };\n\n  if (props.buttonLabel === 'login') {\n    return (\n      <div>\n        <div style={hideWhenVisible}>\n          <button onClick={toggleVisibility} style={{ cursor: 'pointer' }}>\n            {props.buttonLabel}\n          </button>\n        </div>\n        <div style={showWhenVisible}>\n          {props.children}\n          <button id='cancel-login' onClick={loginCancelHandle}>\n            cancel\n          </button>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        <div style={showWhenVisible} className='hide-form'>\n          <BlogForm handler={handler} />\n          <button onClick={blogCancelHandle} data-testid='blog-cancel'>\n            cancel\n          </button>\n        </div>\n        <div style={hideWhenVisible} className='show-form'>\n          <button onClick={toggleVisibility} style={{ cursor: 'pointer' }}>\n            {props.buttonLabel}\n          </button>\n          {props.children}\n        </div>\n      </div>\n    );\n  }\n});\n\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired,\n};\n\nTogglable.displayName = 'Togglable';\nexport default Togglable;\n","import React, { useState, useEffect } from 'react';\n//import blogService from '../src/services/blogService';\nimport Blog from './components/Blog';\nimport Button from './components/Button';\nimport loginService from '../src/services/login';\nimport LoginForm from './components/LoginForm';\nimport SuccessNotification from './components/SuccessNotification';\nimport ErrorNotification from './components/ErrorNotification';\nimport utility from './utilities/utility';\nimport Togglable from './components/Togglable';\nconst blogService = require('../src/services/blogService');\n\nconst baseUrl = 'http://localhost:3000';\nconst App = () => {\n  const [username, setUserName] = useState('');\n  const [password, setPassword] = useState('');\n  const [blogs, setBlogs] = useState([]);\n  const [user, setUser] = useState(null);\n  const [title, setTitle] = useState('');\n  const [author, setAuthor] = useState('');\n  const [url, setUrl] = useState('');\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [successMessage, setSuccessMessage] = useState(null);\n\n  //for toggling\n  //const loginFormRef = React.createRef();\n\n  //props like button\n  async function fetchBlogs() {\n    try {\n      const blogList = await blogService.getAll();\n      setBlogs(blogList);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  useEffect(() => {\n    fetchBlogs();\n  }, []);\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogAppUser');\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      blogService.setToken(user.token);\n    }\n  }, []);\n\n  const handleLogin = async event => {\n    event.preventDefault();\n    try {\n      const user = await loginService.login({ username, password });\n      blogService.setToken(user.token);\n      window.localStorage.setItem('loggedBlogAppUser', JSON.stringify(user));\n      setUser(user);\n      setUserName('');\n      setPassword('');\n    } catch (error) {\n      setErrorMessage('wrong username or password');\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n    }\n  };\n\n  const logoutHandle = async () => {\n    window.localStorage.removeItem('loggedBlogAppUser');\n    window.location.href = baseUrl;\n  };\n\n  const titleHandler = event => setTitle(event.target.value);\n  const authorHandler = event => setAuthor(event.target.value);\n  const urlHandler = event => setUrl(event.target.value);\n\n  const usernameHandler = event => setUserName(event.target.value);\n  const passwordHandler = event => setPassword(event.target.value);\n\n  const addBlog = async event => {\n    event.preventDefault();\n    const blogObject = {\n      title,\n      author,\n      url,\n    };\n    try {\n      const returnedBlog = await blogService.create(blogObject);\n\n      setSuccessMessage(`${title}! by ${author} added`);\n      setTimeout(() => {\n        setSuccessMessage(null);\n      }, 5000);\n      setBlogs(blogs.concat(returnedBlog));\n      setTitle('');\n      setAuthor('');\n      setUrl('');\n    } catch (error) {\n      setErrorMessage(\n        'blog may already exist or blog creation failed service not available try again ...',\n      );\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n    }\n  };\n\n  const onDeleteHandler = async blog => {\n    try {\n      await blogService.deleteBlog(blog.id);\n      setSuccessMessage(`blog titled \"${blog.title}! by ${author} deleted`);\n      setTimeout(() => {\n        setSuccessMessage(null);\n      }, 5000);\n      fetchBlogs();\n    } catch (error) {\n      setErrorMessage(\n        'blog cannot be deleted service not available try again ...',\n      );\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n    }\n  };\n\n  const onUpdateLikes = async (id, blogToupdate) => {\n    try {\n      const returnedBlog = await blogService.update(id, blogToupdate);\n\n      fetchBlogs();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const cancelLoginHandler = () => {\n    setUserName('');\n    setPassword('');\n  };\n\n  const cancelBlogHandler = () => {\n    setTitle('');\n    setAuthor('');\n    setUrl('');\n  };\n\n  const handler = {\n    addBlog,\n    titleHandler,\n    authorHandler,\n    urlHandler,\n    title,\n    url,\n    author,\n    cancelLoginHandler,\n    cancelBlogHandler,\n  };\n\n  if (user === null) {\n    return (\n      <div>\n        <h2>blogs</h2>\n        <ErrorNotification message={errorMessage} />\n        <Togglable buttonLabel='login' handleLoginCancel={cancelLoginHandler}>\n          <LoginForm\n            username={username}\n            password={password}\n            usernameHandler={usernameHandler}\n            passwordHandler={passwordHandler}\n            handleLogin={handleLogin}\n          />\n        </Togglable>\n      </div>\n    );\n  } else {\n    return (\n      <>\n        <h2>blogs</h2>\n        <SuccessNotification message={successMessage} />\n        <ErrorNotification message={errorMessage} />\n        <p>\n          {utility.capitalizeString(user.name)} logged in{' '}\n          <Button id='logout-btn' action='logout' onClick={logoutHandle} />\n        </p>\n\n        <Togglable\n          buttonLabel='new note'\n          handler={handler}\n          handleBlogCancel={cancelBlogHandler}>\n          {utility.blogSort(blogs).map(blog => (\n            <Blog\n              key={blog.id}\n              blog={blog}\n              user={user}\n              onDeleteHandler={onDeleteHandler}\n              onUpdateLikes={onUpdateLikes}\n            />\n          ))}\n        </Togglable>\n      </>\n    );\n  }\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport './App.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}